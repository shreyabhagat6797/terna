'''
Write a python program to solve a classic ancient Chinese puzzle.

We count 35 heads and 94 legs among the chickens and rabbits in a farm. 
How many rabbits and how many chickens do we have?

Sample Input                  Expected Output

heads-150 legs-400                100      50

heads-3 legs-11                 No solution

heads-3 legs-12                   0        3

heads-5 legs-10                    5       0

 
'''

def solve(heads,legs):
    chicken_count=0
    rabbit_count=0
    if legs%2==0:
        rabbit_count=(legs//2)-heads
        chicken_count=heads-rabbit_count
        if rabbit_count<0 or chicken_count<0:
            print("no solution")
        else:
            print("chicken: ",chicken_count)
            print("rabbit: ",rabbit_count)
    else:
        print("no solution")

solve(150,400)
print()
solve(3,11)
print()
solve(3,12)
print()
solve(150,140)


#Recursion
#function calling itself

#syntax
'''
def func():
    ...
    ...
    ...func()
'''

def factorial(n):
    if n==1:
        return n
    else:
        return n*factorial(n-1)
n=5
if n<0:
    print("invalid input")
elif n==0:
    print("factorial of 0 is 1")
else:
    print("factorial of n",n,"=",factorial(n))




def fibo(n):
    if n<=1:
        return n
    else:
        return (fibo(n-1)+fibo(n-2))

n=10
if n<=0:
    print("invalid")
else:
    for i in range(n):
        print(fibo(i))
